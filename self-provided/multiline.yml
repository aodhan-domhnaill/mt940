&id003 !!python/object:mt940.models.Transactions
data:
  account_identification: 'BILLLULLXXX/"NUMERO DE COMPTE IBAN '
  available_balance: !!python/object:mt940.models.Balance
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal
      - '11.40'
      currency: EUR
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9QIBA==
    status: C
  final_closing_balance: !!python/object:mt940.models.Balance
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal
      - '11.40'
      currency: EUR
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9QIBA==
    status: C
  final_opening_balance: !!python/object:mt940.models.Balance
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal
      - '16.40'
      currency: EUR
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9QIAg==
    status: C
  sequence_number: '001'
  statement_number: '00115'
  transaction_reference: BILMT940
tags:
  13: !!python/object:mt940.tags.DateTimeIndication
    re: !!python/object/apply:re._compile
    - "^\n    (?P<year>\\d{2})\n    (?P<month>\\d{2})\n    (?P<day>\\d{2})\n    (?P<hour>\\d{2})\n
      \   (?P<minute>\\d{2})\n    (\\+(?P<offset>\\d{4})|)\n    "
    - 98
  20: !!python/object:mt940.tags.TransactionReferenceNumber
    re: !!python/object/apply:re._compile
    - (?P<transaction_reference>.{0,16})
    - 98
  21: !!python/object:mt940.tags.RelatedReference
    re: !!python/object/apply:re._compile
    - (?P<related_reference>.{0,16})
    - 98
  25: !!python/object:mt940.tags.AccountIdentification
    re: !!python/object/apply:re._compile
    - (?P<account_identification>.{0,35})
    - 98
  28: !!python/object:mt940.tags.StatementNumber
    re: !!python/object/apply:re._compile
    - "\n    (?P<statement_number>\\d{1,5})  # 5n\n    (?:/?(?P<sequence_number>\\d{1,5}))?
      \ # [/5n]\n    $"
    - 98
  60: !!python/object:mt940.tags.OpeningBalance
    re: &id001 !!python/object/apply:re._compile
    - "^\n    (?P<status>[DC])  # 1!a Debit/Credit\n    (?P<year>\\d{2})  # 6!n Value
      Date (YYMMDD)\n    (?P<month>\\d{2})\n    (?P<day>\\d{2})\n    (?P<currency>.{3})
      \ # 3!a Currency\n    (?P<amount>[0-9,]{0,16})  # 15d Amount (includes decimal
      sign, so 16)\n    "
    - 98
  60M: !!python/object:mt940.tags.IntermediateOpeningBalance
    re: *id001
  60F: !!python/object:mt940.tags.FinalOpeningBalance
    re: *id001
  61: !!python/object:mt940.tags.Statement
    re: !!python/object/apply:re._compile
    - "^\n    (?P<year>\\d{2})  # 6!n Value Date (YYMMDD)\n    (?P<month>\\d{2})\n
      \   (?P<day>\\d{2})\n    (?P<entry_month>\\d{2})?  # [4!n] Entry Date (MMDD)\n
      \   (?P<entry_day>\\d{2})?\n    (?P<status>R?[DC])  # 2a Debit/Credit Mark\n
      \   (?P<funds_code>[A-Z])? # [1!a] Funds Code (3rd character of the currency\n
      \                           # code, if needed)\n    [\\n ]? # apparently some
      banks (sparkassen) incorporate newlines here\n    # cuscal can also send a space
      here as well\n    (?P<amount>[\\d,]{1,15})  # 15d Amount\n    (?P<id>[A-Z][A-Z0-9
      ]{3})?  # 1!a3!c Transaction Type Identification Code\n    # We need the (slow)
      repeating negative lookahead to search for // so we\n    # don't acciddntly
      include the bank reference in the customer reference.\n    (?P<customer_reference>((?!//)[^\\n]){0,16})
      \ # 16x Customer Reference\n    (//(?P<bank_reference>.{0,23}))?  # [//23x]
      Bank Reference\n    (\\n?(?P<extra_details>.{0,34}))?  # [34x] Supplementary
      Details\n    $"
    - 98
  62: !!python/object:mt940.tags.ClosingBalance
    re: *id001
  62M: !!python/object:mt940.tags.IntermediateClosingBalance
    re: *id001
  62F: !!python/object:mt940.tags.FinalClosingBalance
    re: *id001
  64: !!python/object:mt940.tags.AvailableBalance
    re: *id001
  65: !!python/object:mt940.tags.ForwardAvailableBalance
    re: *id001
  86: !!python/object:mt940.tags.TransactionDetails
    re: !!python/object/apply:re._compile
    - "\n    (?P<transaction_details>(([\\s\\S]{0,65}\\r?\\n?){0,8}[\\s\\S]{0,65}))\n
      \   "
    - 98
  34: !!python/object:mt940.tags.FloorLimitIndicator
    re: !!python/object/apply:re._compile
    - "^\n    (?P<currency>[A-Z]{3})  # 3!a Currency\n    (?P<status>[DC ]?)  # 2a
      Debit/Credit Mark\n    (?P<amount>[0-9,]{0,16})  # 15d Amount (includes decimal
      sign, so 16)\n    $"
    - 98
  NS: !!python/object:mt940.tags.NonSwift
    re: !!python/object/apply:re._compile
    - "\n    (?P<non_swift>\n        (\n            (\\d{2}.{0,})\n            (\\n\\d{2}.{0,})*\n
      \       )|(\n            [^\\n]*\n        )\n    )\n    $"
    - 98
  90: !!python/object:mt940.tags.SumEntries
    re: &id002 !!python/object/apply:re._compile
    - "^\n    (?P<number>\\d*)\n    (?P<currency>.{3})  # 3!a Currency\n    (?P<amount>[\\d,]{1,15})
      \ # 15d Amount\n    "
    - 98
  90D: !!python/object:mt940.tags.SumDebitEntries
    re: *id002
  90C: !!python/object:mt940.tags.SumCreditEntries
    re: *id002
transactions:
- !!python/object:mt940.models.Transaction
  data:
    additional_purpose: NOM ET ADRESSE DO / BENEF 112345678
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal
      - '-5'
      currency: EUR
    applicant_bin: BILLLULL1234
    applicant_iban: NUMERO DE COMPTE01234567
    applicant_name: NOM DU DO / BENEFICIAIRE 11NOM DU DO / BENEFICIAIRE 22
    bank_reference: MUL0408041114005
    currency: EUR
    customer_reference: REFERENCE DO 111
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9QIBA==
    entry_date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9QIBA==
    extra_details: /OCMT/EUR4,5//IACC/D3/
    funds_code: R
    guessed_entry_date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B9QIBA==
    id: NTRF
    posting_text: VIREMENT111111111111111111X
    prima_nota: null
    purpose: LIGNE111111111111111111111X12345678LIGNE222222222222222222222X12345678LIGNE333333333333333333333X12345678LIGNE444444444444444444444X12345678LIGNE555555555555555555555X12345678/CHGS/EUR0,5/LIGNE777777777777777777777X12345678LIGNE888888888888888888888X12345678LIGNE999999999999999999999X12345678LIGNE101010101010101010101X12345678
    recipient_name: null
    return_debit_notes: null
    status: D
    transaction_code: '020'
    transaction_details: 'FREE TEXT

      FREE TEXT

      FREE TEXT

      FREE TEXT

      FREE TEXT

      FREE TEXT'
    transaction_reference: BILMT940
  transactions: *id003
- !!python/object:mt940.models.Transaction
  data:
    amount: !!python/object:mt940.models.Amount
      amount: !!python/object/apply:decimal.Decimal
      - '119'
      currency: EUR
    bank_reference: O/341241774
    currency: EUR
    customer_reference: 341241773/1XXXXX
    date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B+YMEw==
    entry_date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B+YMFA==
    extra_details: Paiement
    funds_code: null
    guessed_entry_date: !!python/object/apply:mt940.models.Date
    - !!binary |
      B+YMFA==
    id: NMSC
    status: C
    transaction_reference: BILMT940
  transactions: *id003
